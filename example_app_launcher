#!/bin/sh

# for SWH 2.4.0

if ! [ -x "$(which swh 2>/dev/null)" ]; then
    printf "ERROR: swh is not installed or is not executable.\nIt is suggested place swh in %s/bin and add\n  PATH=\$PATH:%s/bin\n  PATH\nto your .bashrc file.\n" $PWD $HOME
    exit 1
fi

## Example Application
# your app's special walkaround

prefix='example'							# give a unique name to your wineprefix
build='4.0-rc6-staging'						# this is the dir name in cellar, provided by winehq or your own build.
install='/opt/wine-staging'					# '/opt/wine-stable', '/opt/wine-devel' or '/opt/wine-staging', used for store official winehq (on fedora or maybe your distro) to $cellar(default location is "$HOME/swh/cellar"). For your own built wine, copy it into $cellar
WINEARCH=win64								# win32 or win64
#invoker=""									# primusrun; perf recored
runner=wine									# wine, wine64, winedbg

#export WINEDLLOVERRIDES=winemenubuilder.exe=d 		# disable winemenubuilder so wine will not create shortcuts to your native linux system, don't disable it if you use production software!
#LC_ALL=zh_CN.utf8									# for non-unicode program, see 'locale -a' command

## DXVK setting
dxvk_install="$HOME/0_wine/dxvk/dxvk-0.95"						# DXVK binary release
#DXVK_CONFIG_FILE="$HOME/0_wine/DXVK_CONFIG/$prefix/dxvk.conf" 	# Some application may require a configuration file
#DXVK_HUD=1


# DIFFERENCE from normal indexed array in bash:
#   1. array[0] is reserved
#   2. valid subscript range [1-99] 
#   3. assign array members contiguously

dir[1]='C:\abc'
exe[1]='xyz.exe'
#args[1]=''

#dir[2]=""
#exe[2]=''
#args[2]=''

#dir[3]=""
#exe[3]=''
#args[3]=''

#dir[4]=""
#exe[4]=''
#args[4]=''

swh_launcher="$0"
source swh $@
